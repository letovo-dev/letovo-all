
# !! do not edit this file, it's perfectly fine even if something shows as an error !!

cmake_minimum_required(VERSION 3.24...4.0.1)

project(letovo_server)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED On)
set(CMAKE_CXX_EXTENSIONS Off)

INCLUDE(FindPkgConfig)

# TODO: add to install-run
if("$ENV{DEBUG}" STREQUAL "t")
    add_compile_options(-g)
endif()
if("$ENV{ROS_DISTRO}" STRGREATER "debian")
    # pkg_check_modules(HTTPLIB cpp-httplib REQUIRED)s
    pkg_check_modules(FMT fmt REQUIRED)
    pkg_check_modules(RESTINIO librestinio-dev REQUIRED)
    pkg_check_modules(PNG libpng REQUIRED)
    pkg_check_modules(QRENCODE libqrencode REQUIRED)
    # set(httplib_path ${HTTPLIB_LIBRARIES})
else()
    # # 3. fmtlib
    find_package(fmt REQUIRED)
    # RESTinio itself
    find_package(restinio REQUIRED)
endif()

# ?
include(FetchContent)

fetchcontent_declare(jwt-cpp 
    GIT_REPOSITORY https://github.com/Thalhammer/jwt-cpp.git
    GIT_TAG 08bcf77a687fb06e34138e9e9fa12a4ecbe12332 # v0.7.0 release
)

set(JWT_BUILD_EXAMPLES OFF CACHE BOOL "disable building examples" FORCE)
fetchcontent_makeavailable(jwt-cpp)


FetchContent_Declare(llhttp
  URL "https://github.com/nodejs/llhttp/archive/refs/tags/release/v8.1.0.tar.gz")

set(BUILD_SHARED_LIBS OFF CACHE INTERNAL "")
set(BUILD_STATIC_LIBS ON CACHE INTERNAL "")
FetchContent_MakeAvailable(llhttp)

string(REPLACE " " ";" BUILD_FILES "$ENV{BUILD_FILES}")
set(SOURCES "$ENV{MAIN_FILE};${BUILD_FILES}")

# Enable processor-specific optimizations
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    add_compile_options(-O3 -flto=auto)
    add_link_options(-flto=auto)
endif()


add_executable(server_starter ${SOURCES})

target_link_libraries(server_starter restinio::restinio jwt-cpp::jwt-cpp -lpqxx -lpq -lssl -lcrypto -lpng -lqrencode)
